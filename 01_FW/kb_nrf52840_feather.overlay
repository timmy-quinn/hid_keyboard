&uart0 {
    status = "ok"; 
};
&spi1 {
    status = "ok"; 
};
&i2c0 {
    status = "disabled"; 
};


/ {
	mtrxout {
        compatible = "kb-mtrx-out";
        swout0: sw_out_5{
            gpios = <&gpio0 27 GPIO_ACTIVE_LOW>;
            label = "switch matrix output 5"; 
        };
        swout1: sw_out_4{
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;
            label = "switch matrix output 4"; 
        };
        swout2: sw_out_3{
            gpios = <&gpio0 7 GPIO_ACTIVE_LOW>;
            label = "switch matrix output 3"; 
        };
        swout3: sw_out_2{
            gpios = <&gpio1 8 GPIO_ACTIVE_LOW>;
            label = "switch matrix output 2"; 
        };
        swout4: sw_out_1{
            gpios = <&gpio0 11 GPIO_ACTIVE_LOW>;
            label = "switch matrix output 1"; 
        };
        swout5: sw_out_0{
            gpios = <&gpio0 12 GPIO_ACTIVE_LOW>;
            label = "switch matrix output 0"; 
        };
		pwr: pwr {
            gpios = <&gpio0 4 GPIO_ACTIVE_LOW>;
            label = "power"; 
        };
	};

	buttons {
		compatible = "gpio-keys";
		button0: button_0 {
			gpios = <&gpio1 2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button switch";
			zephyr,code = <INPUT_KEY_0>;
		};
        swin0: sw_in_4 {
            gpios = <&gpio0 13 (GPIO_PULL_UP| GPIO_ACTIVE_LOW)>; 
            label = "switch matrix input 4"; 
        };
        swin1: sw_in_3 {
            gpios = <&gpio0 15 (GPIO_PULL_UP| GPIO_ACTIVE_LOW)>; 
            label = "switch matrix input 3"; 
        };
        swin2: sw_in_2 {
            gpios = <&gpio0 24 (GPIO_PULL_UP| GPIO_ACTIVE_LOW)>; 
            label = "switch matrix input 2"; 
        };
        swin3: sw_in_1 {
            gpios = <&gpio0 25 (GPIO_PULL_UP| GPIO_ACTIVE_LOW)>; 
            label = "switch matrix input 1"; 
        };
        swin4: sw_in_0 {
            gpios = <&gpio0 14 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>; 
            label = "switch matrix input 0"; 
        };
	};
};


&pinctrl {
	uart0_default: uart0_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 1, 9)>,
				<NRF_PSEL(UART_RX, 0, 8)>;
		};
	};

	uart0_sleep: uart0_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, 1, 9)>,
				<NRF_PSEL(UART_RX, 0, 8)>;
			low-power-enable;
		};
	};

    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 16)>,
                <NRF_PSEL(SPIM_SCK, 0, 4)>,
                <NRF_PSEL(SPIM_MISO, 0, 5)>;    
        };
    };
    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 16)>,
                <NRF_PSEL(SPIM_SCK, 0, 4)>,
                <NRF_PSEL(SPIM_MISO, 0, 5)>;    
        };
    };
};


#include <zephyr/dt-bindings/led/led.h>
#include "nrf52-bindings.h" 

&spi1 { 
	compatible = "nordic,nrf-spim";
	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <SPI_FREQ>;

		/* WS2812 */
		chain-length = <16>; /* arbitrary; change at will */
		color-mapping = <LED_COLOR_ID_GREEN
				 LED_COLOR_ID_RED
				 LED_COLOR_ID_BLUE>;
		spi-one-frame = <ONE_FRAME>;
		spi-zero-frame = <ZERO_FRAME>;
	};
};

// &pinctrl {
// 	i2s0_default_alt: i2s0_default_alt {
// 		group1 {
// 			psels = <NRF_PSEL(I2S_SCK_M, 0, 20)>,
// 				<NRF_PSEL(I2S_LRCK_M, 0, 19)>,
// 				<NRF_PSEL(I2S_SDOUT, 0, 18)>,
// 				<NRF_PSEL(I2S_SDIN, 0, 21)>;
// 		};
// 	};
// };

// i2s_led: &i2s0 {
// 	status = "okay";
// 	pinctrl-0 = <&i2s0_default_alt>;
// 	pinctrl-names = "default";

// 	led_strip: ws2812@0 {
// 		compatible = "worldsemi,ws2812-i2s";
//         i2s-dev = <&i2s0>;

// 		reg = <0>;
// 		chain-length = <1>; /* arbitrary; change at will */
// 		color-mapping = <LED_COLOR_ID_GREEN
// 					LED_COLOR_ID_RED
// 					LED_COLOR_ID_BLUE>;
// 		out-active-low;
// 		reset-delay = <120>;
// 	};
// };

/ {
	aliases {
		led-strip = &led_strip;
	};
};